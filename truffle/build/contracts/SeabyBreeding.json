{
  "contractName": "SeabyBreeding",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSeaby",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "isForSale",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "seabies",
      "outputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "generation",
          "type": "uint16"
        },
        {
          "name": "birthtime",
          "type": "uint64"
        },
        {
          "name": "siringCD",
          "type": "uint256"
        },
        {
          "name": "forSale",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "SeabyToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "createRandomSeaby",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "takeOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "seabyApprovals",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "Pregnant",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "seabyId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "name",
          "type": "string"
        }
      ],
      "name": "SeabyBirth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "seabyId",
          "type": "uint256"
        }
      ],
      "name": "TransferFinish",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_seabyId",
          "type": "uint256"
        },
        {
          "name": "_newName",
          "type": "string"
        }
      ],
      "name": "changeName",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_seabyId",
          "type": "uint256"
        }
      ],
      "name": "changeForSaleStatus",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getSeabiesByOwner",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101a1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a7146101a657806306fdde0314610218578063081812fc146102a8578063095ea7b31461032357806318160ddd1461037e57806323b872dd146103a95780632f745c591461042457806340c10f191461049357806342842e0e1461050657806342edeccc146105815780634f6ccce7146105ac5780635e690182146105fb5780636352211e146106a157806370a082311461071c5780638546d002146107815780638da5cb5b146107d457806395d89b411461082b578063983b2d56146108bb578063986502751461090c578063a22cb46514610923578063a2d1aeb614610980578063a9059cbb14610a70578063aa271e1a14610acb578063aaf3403614610b34578063af9336e914610baf578063b2e6ceeb14610c77578063b88d4fde14610cb2578063c39cbef114610dc4578063c87b56dd14610e54578063cb87f4c514610f08578063e985e9c514610f43578063f2fde38b14610fcc578063f76073a81461101d575b600080fd5b3480156101b257600080fd5b506101fe600480360360208110156101c957600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611098565b604051808215151515815260200191505060405180910390f35b34801561022457600080fd5b5061022d611100565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561026d578082015181840152602081019050610252565b50505050905090810190601f16801561029a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102b457600080fd5b506102e1600480360360208110156102cb57600080fd5b81019080803590602001909291905050506111a2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032f57600080fd5b5061037c6004803603604081101561034657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111f3565b005b34801561038a57600080fd5b506103936112b9565b6040518082815260200191505060405180910390f35b3480156103b557600080fd5b50610422600480360360608110156103cc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112c6565b005b34801561043057600080fd5b5061047d6004803603604081101561044757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112eb565b6040518082815260200191505060405180910390f35b34801561049f57600080fd5b506104ec600480360360408110156104b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611362565b604051808215151515815260200191505060405180910390f35b34801561051257600080fd5b5061057f6004803603606081101561052957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061138c565b005b34801561058d57600080fd5b506105966113ad565b6040518082815260200191505060405180910390f35b3480156105b857600080fd5b506105e5600480360360208110156105cf57600080fd5b81019080803590602001909291905050506113bd565b6040518082815260200191505060405180910390f35b34801561060757600080fd5b5061064a6004803603602081101561061e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113f5565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561068d578082015181840152602081019050610672565b505050509050019250505060405180910390f35b3480156106ad57600080fd5b506106da600480360360208110156106c457600080fd5b8101908080359060200190929190505050611524565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561072857600080fd5b5061076b6004803603602081101561073f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611561565b6040518082815260200191505060405180910390f35b34801561078d57600080fd5b506107ba600480360360208110156107a457600080fd5b81019080803590602001909291905050506115aa565b604051808215151515815260200191505060405180910390f35b3480156107e057600080fd5b506107e96115e1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561083757600080fd5b50610840611606565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610880578082015181840152602081019050610865565b50505050905090810190601f1680156108ad5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156108c757600080fd5b5061090a600480360360208110156108de57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116a8565b005b34801561091857600080fd5b506109216116c8565b005b34801561092f57600080fd5b5061097e6004803603604081101561094657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506116d3565b005b34801561098c57600080fd5b506109b9600480360360208110156109a357600080fd5b810190808035906020019092919050505061180f565b60405180806020018661ffff1661ffff1681526020018567ffffffffffffffff1667ffffffffffffffff16815260200184815260200183151515158152602001828103825287818151815260200191508051906020019080838360005b83811015610a31578082015181840152602081019050610a16565b50505050905090810190601f168015610a5e5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b348015610a7c57600080fd5b50610ac960048036036040811015610a9357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061191b565b005b348015610ad757600080fd5b50610b1a60048036036020811015610aee57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119ca565b604051808215151515815260200191505060405180910390f35b348015610b4057600080fd5b50610b6d60048036036020811015610b5757600080fd5b81019080803590602001909291905050506119e7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610bbb57600080fd5b50610c7560048036036020811015610bd257600080fd5b8101908080359060200190640100000000811115610bef57600080fd5b820183602082011115610c0157600080fd5b80359060200191846001830284011164010000000083111715610c2357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611a1a565b005b348015610c8357600080fd5b50610cb060048036036020811015610c9a57600080fd5b8101908080359060200190929190505050611ad3565b005b348015610cbe57600080fd5b50610dc260048036036080811015610cd557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610d3c57600080fd5b820183602082011115610d4e57600080fd5b80359060200191846001830284011164010000000083111715610d7057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611b5c565b005b348015610dd057600080fd5b50610e5260048036036040811015610de757600080fd5b810190808035906020019092919080359060200190640100000000811115610e0e57600080fd5b820183602082011115610e2057600080fd5b80359060200191846001830284011164010000000083111715610e4257600080fd5b9091929391929390505050611b84565b005b348015610e6057600080fd5b50610e8d60048036036020811015610e7757600080fd5b8101908080359060200190929190505050611c95565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ecd578082015181840152602081019050610eb2565b50505050905090810190601f168015610efa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610f1457600080fd5b50610f4160048036036020811015610f2b57600080fd5b8101908080359060200190929190505050611d5e565b005b348015610f4f57600080fd5b50610fb260048036036040811015610f6657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ea3565b604051808215151515815260200191505060405180910390f35b348015610fd857600080fd5b5061101b60048036036020811015610fef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f37565b005b34801561102957600080fd5b506110566004803603602081101561104057600080fd5b810190808035906020019092919050505061208c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111985780601f1061116d57610100808354040283529160200191611198565b820191906000526020600020905b81548152906001019060200180831161117b57829003601f168201915b5050505050905090565b60006111ad826120bf565b15156111b857600080fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6111fd3382612131565b151561120857600080fd5b816012600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000600880549050905090565b6112d0338261219d565b15156112db57600080fd5b6112e6838383612232565b505050565b60006112f683611561565b8210151561130357600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561134f57fe5b9060005260206000200154905092915050565b600061136d336119ca565b151561137857600080fd5b6113828383612256565b6001905092915050565b6113a88383836020604051908101604052806000815250611b5c565b505050565b60006001600f8054905003905090565b60006113c76112b9565b821015156113d457600080fd5b6008828154811015156113e357fe5b90600052602060002001549050919050565b606080601160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040519080825280602002602001820160405280156114665781602001602082028038833980820191505090505b509050600080905060008090505b600f80549050811015611519578473ffffffffffffffffffffffffffffffffffffffff166010600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561150c578083838060010194508151811015156114fd57fe5b90602001906020020181815250505b8080600101915050611474565b508192505050919050565b60006010600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600f828154811015156115bb57fe5b906000526020600020906005020160030160009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600b8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561169e5780601f106116735761010080835404028352916020019161169e565b820191906000526020600020905b81548152906001019060200180831161168157829003601f168201915b5050505050905090565b6116b1336119ca565b15156116bc57600080fd5b6116c581612277565b50565b6116d1336122d1565b565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561170e57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b600f8181548110151561181e57fe5b9060005260206000209060050201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118ca5780601f1061189f576101008083540402835291602001916118ca565b820191906000526020600020905b8154815290600101906020018083116118ad57829003601f168201915b5050505050908060010160009054906101000a900461ffff16908060010160029054906101000a900467ffffffffffffffff16908060020154908060030160009054906101000a900460ff16905085565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561195757600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561199257600080fd5b61199c3382612131565b15156119a757600080fd5b6119b0816115aa565b15156119bb57600080fd5b6119c633838361232b565b5050565b60006119e082600d6124b390919063ffffffff16565b9050919050565b60106020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003390506060600e60009054906101000a900460ff1660ff16604051908082528060200260200182016040528015611a625781602001602082028038833980820191505090505b50905060008090505b600e60009054906101000a900460ff1660ff16811015611ac057611a8d612547565b8282815181101515611a9b57fe5b9060200190602002019061ffff16908161ffff16815250508080600101915050611a6b565b50611ace836000848461263c565b505050565b3373ffffffffffffffffffffffffffffffffffffffff166012600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611b4057600080fd5b6000611b4b82611524565b9050611b5881338461232b565b5050565b611b678484846112c6565b611b7384848484612810565b1515611b7e57600080fd5b50505050565b826010600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611bf257600080fd5b6010600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611c5f57600080fd5b8282600f86815481101515611c7057fe5b90600052602060002090600502016000019190611c8e9291906133f3565b5050505050565b6060611ca0826120bf565b1515611cab57600080fd5b600c60008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d525780601f10611d2757610100808354040283529160200191611d52565b820191906000526020600020905b815481529060010190602001808311611d3557829003601f168201915b50505050509050919050565b806010600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611dcc57600080fd5b6010600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e3957600080fd5b600f82815481101515611e4857fe5b906000526020600020906005020160030160009054906101000a900460ff1615600f83815481101515611e7757fe5b906000526020600020906005020160030160006101000a81548160ff0219169083151502179055505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611f9257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611fce57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60126020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008273ffffffffffffffffffffffffffffffffffffffff166010600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b6000806121a983611524565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061221857508373ffffffffffffffffffffffffffffffffffffffff16612200846111a2565b73ffffffffffffffffffffffffffffffffffffffff16145b8061222957506122288185611ea3565b5b91505092915050565b61223d838383612a33565b6122478382612c98565b6122518282612e3c565b505050565b6122608282612f03565b61226a8282612e3c565b6122738161309c565b5050565b61228b81600d6130e890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6122e581600d61319890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816010600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151561245357601160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001900391905055505b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f615a90b6cfa77287f9e381f0aed394618bcfa338a2b4039eb03854fd16277f6d60405160405180910390a4505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156124f057600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806003905060006064423384604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018260ff1660ff167f0100000000000000000000000000000000000000000000000000000000000000028152600101935050505060405160208183030381529060405280519060200120600190048115156125f957fe5b06905060218111151561261157600192505050612639565b602181118015612622575060438111155b1561263257600292505050612639565b6003925050505b90565b600062015180905061264c613473565b60a0604051908101604052808781526020018661ffff1681526020014267ffffffffffffffff16815260200183815260200160001515815250905060006001600f839080600181540180825580915050906001820390600052602060002090600502016000909192909190915060008201518160000190805190602001906126d59291906134b3565b5060208201518160010160006101000a81548161ffff021916908361ffff16021790555060408201518160010160026101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506060820151816002015560808201518160030160006101000a81548160ff02191690831515021790555050500390506127618185613247565b866040518082805190602001908083835b6020831015156127975780518252602082019150602081019050602083039250612772565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020817f36026835b208a23745db38d36cced019e4c2b46b073d40f86a67baccb51e6fa760405160405180910390a36127fd6000868361232b565b6128078582612256565b50505050505050565b60006128318473ffffffffffffffffffffffffffffffffffffffff166132dd565b15156128405760019050612a2b565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561293757808201518184015260208101905061291c565b50505050905090810190601f1680156129645780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561298657600080fd5b505af115801561299a573d6000803e3d6000fd5b505050506040513d60208110156129b057600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff16612a5382611524565b73ffffffffffffffffffffffffffffffffffffffff16141515612a7557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612ab157600080fd5b612aba816132f0565b612b0d6001600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133b090919063ffffffff16565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612ba36001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133d290919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000612cf06001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506133b090919063ffffffff16565b90506000600760008481526020019081526020016000205490508181141515612de3576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612d6157fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612dbb57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612e359190613533565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612f3f57600080fd5b612f48816120bf565b151515612f5457600080fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612ff96001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133d290919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561312457600080fd5b61312e82826124b3565b15151561313a57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156131d457600080fd5b6131de82826124b3565b15156131e957600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000600f8381548110151561325857fe5b9060005260206000209060050201905060008090505b82518160ff1610156132d757828160ff1681518110151561328b57fe5b906020019060200201518260040160008360ff1660ff16815260200190815260200160002060006101000a81548161ffff021916908361ffff160217905550808060010191505061326e565b50505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156133ad5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008282111515156133c157600080fd5b600082840390508091505092915050565b60008082840190508381101515156133e957600080fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061343457803560ff1916838001178555613462565b82800160010185558215613462579182015b82811115613461578235825591602001919060010190613446565b5b50905061346f919061355f565b5090565b60a06040519081016040528060608152602001600061ffff168152602001600067ffffffffffffffff168152602001600081526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106134f457805160ff1916838001178555613522565b82800160010185558215613522579182015b82811115613521578251825591602001919060010190613506565b5b50905061352f919061355f565b5090565b81548183558181111561355a57818360005260206000209182019101613559919061355f565b5b505050565b61358191905b8082111561357d576000816000905550600101613565565b5090565b9056fea165627a7a72305820023104f571c117b233bd602c53e7450a3acbc1b16dbcbdeca238c527d04e462c0029",
  "sourceMap": "58:1670:5:-;;;907:1:0;881:27;;;;;;;;;;;;;;;;;;;;474:155:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;551:4;557:6;608:10:2;600:5;;:18;;;;;;;;;;;;;;;;;;640:40:35;236:10;659:20;;640:18;;;:40;;;:::i;:::-;1906::57;1163:10;1925:20;;1906:18;;;:40;;;:::i;:::-;1240:51:59;855:10;1259:31;;1240:18;;;:51;;;:::i;:::-;746:4:62;738:5;:12;;;;;;;;;;;;:::i;:::-;;770:6;760:7;:16;;;;;;;;;;;;:::i;:::-;;864:49;428:10;883:29;;864:18;;;:49;;;:::i;:::-;666:254;;474:155:60;;275:22:9;286:10;275;;;:22;;;:::i;:::-;58:1670:5;;990:158:35;1080:10;1065:25;;:11;:25;;;;;1057:34;;;;;;;;1137:4;1101:20;:33;1122:11;1101:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;990:158;:::o;685:119:9:-;741:21;754:7;741:8;:12;;;;;;:21;;;;;:::i;:::-;789:7;777:20;;;;;;;;;;;;685:119;:::o;259:181:7:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;;;376:18;380:4;386:7;376:3;;;:18;;;:::i;:::-;375:19;367:28;;;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;786:162::-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;58:1670:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "58:1670:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:133:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;778:133:35;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;778:133:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1024:83:62;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1024:83:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1024:83:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3705:151:57;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3705:151:57;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3705:151:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;911:204:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;911:204:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;911:204:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2005:94:59;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2005:94:59;;;;;;;;;;;;;;;;;;;;;;;5260:180:57;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5260:180:57;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5260:180:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:182:59;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1671:182:59;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1671:182:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;442:132:64;;8:9:-1;5:2;;;30:1;27;20:12;5:2;442:132:64;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;442:132:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6079::57;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6079:132:57;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6079:132:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1695:92:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1695:92:3;;;;;;;;;;;;;;;;;;;;;;;2436:148:59;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2436:148:59;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2436:148:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1228:385:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1228:385:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1228:385:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1228:385:5;;;;;;;;;;;;;;;;;356:120:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;356:120:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;356:120:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;225:123;;8:9:-1;5:2;;;30:1;27;20:12;5:2;225:123:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;225:123:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1575:114;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1575:114:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1575:114:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;244:20:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;244:20:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1215:87:62;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1215:87:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1215:87:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;508:90:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;508:90:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;508:90:9;;;;;;;;;;;;;;;;;;;;;;604:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;604:75:9;;;;;;4148:213:57;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4148:213:57;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4148:213:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:22:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;915:22:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;915:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;915:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;525:378:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;525:378:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;525:378:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;395:107:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;395:107:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;395:107:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1054:45:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1054:45:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1054:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3273:436;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3273:436:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3273:436:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3273:436:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3273:436:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3273:436:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3273:436:0;;;;;;;;;;;;;;;;;;1123:209:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1123:209:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1123:209:3;;;;;;;;;;;;;;;;;;;;6916:211:57;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6916:211:57;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;6916:211:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6916:211:57;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6916:211:57;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6916:211:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6916:211:57;;;;;;;;;;;;;;;;;;806:203:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;806:203:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;806:203:5;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;806:203:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;806:203:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;806:203:5;;;;;;;;;;;;;;;1501:151:62;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1501:151:62;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1501:151:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1501:151:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1015:207:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1015:207:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1015:207:5;;;;;;;;;;;;;;;;;;;;4682:145:57;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4682:145:57;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4682:145:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;973:192:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;973:192:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;973:192:2;;;;;;;;;;;;;;;;;;;;;;1231:47:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1231:47:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1231:47:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:133:35;848:4;871:20;:33;892:11;871:33;;;;;;;;;;;;;;;;;;;;;;;;;;;864:40;;778:133;;;:::o;1024:83:62:-;1063:13;1095:5;1088:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1024:83;:::o;3705:151:57:-;3764:7;3791:16;3799:7;3791;:16::i;:::-;3783:25;;;;;;;;3825:15;:24;3841:7;3825:24;;;;;;;;;;;;;;;;;;;;;3818:31;;3705:151;;;:::o;911:204:3:-;985:29;993:10;1005:8;985:7;:29::i;:::-;977:38;;;;;;;;1053:3;1026:14;:24;1041:8;1026:24;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1098:8;1093:3;1072:35;;1081:10;1072:35;;;;;;;;;;;;911:204;;:::o;2005:94:59:-;2049:7;2075:10;:17;;;;2068:24;;2005:94;:::o;5260:180:57:-;5350:39;5369:10;5381:7;5350:18;:39::i;:::-;5342:48;;;;;;;;5401:32;5415:4;5421:2;5425:7;5401:13;:32::i;:::-;5260:180;;;:::o;1671:182:59:-;1751:7;1786:16;1796:5;1786:9;:16::i;:::-;1778:5;:24;1770:33;;;;;;;;1820:12;:19;1833:5;1820:19;;;;;;;;;;;;;;;1840:5;1820:26;;;;;;;;;;;;;;;;;;1813:33;;1671:182;;;;:::o;442:132:64:-;512:4;350:20:9;359:10;350:8;:20::i;:::-;342:29;;;;;;;;528:18:64;534:2;538:7;528:5;:18::i;:::-;563:4;556:11;;442:132;;;;:::o;6079::57:-;6165:39;6182:4;6188:2;6192:7;6165:39;;;;;;;;;;;;;:16;:39::i;:::-;6079:132;;;:::o;1695:92:3:-;1738:4;1778:1;1761:7;:14;;;;:18;1754:25;;1695:92;:::o;2436:148:59:-;2494:7;2529:13;:11;:13::i;:::-;2521:5;:21;2513:30;;;;;;;;2560:10;2571:5;2560:17;;;;;;;;;;;;;;;;;;2553:24;;2436:148;;;:::o;1228:385:5:-;1293:13;1319:24;1357:15;:23;1373:6;1357:23;;;;;;;;;;;;;;;;1346:35;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1346:35:5;;;;1319:62;;1392:12;1407:1;1392:16;;1424:6;1433:1;1424:10;;1419:159;1440:7;:14;;;;1436:1;:18;1419:159;;;1499:6;1480:25;;:12;:15;1493:1;1480:15;;;;;;;;;;;;;;;;;;;;;:25;;;1476:91;;;1550:1;1526:10;1537:9;;;;;;1526:21;;;;;;;;;;;;;;;;;:25;;;;;1476:91;1456:3;;;;;;;1419:159;;;;1595:10;1588:17;;;;1228:385;;;:::o;356:120:3:-;412:14;446:12;:22;459:8;446:22;;;;;;;;;;;;;;;;;;;;;439:29;;356:120;;;:::o;225:123::-;281:16;317:15;:23;333:6;317:23;;;;;;;;;;;;;;;;310:30;;225:123;;;:::o;1575:114::-;1633:4;1656:7;1664:8;1656:17;;;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;1649:32;;1575:114;;;:::o;244:20:2:-;;;;;;;;;;;;;:::o;1215:87:62:-;1256:13;1288:7;1281:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1215:87;:::o;508:90:9:-;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;;;572:19;583:7;572:10;:19::i;:::-;508:90;:::o;604:75::-;647:25;661:10;647:13;:25::i;:::-;604:75::o;4148:213:57:-;4233:10;4227:16;;:2;:16;;;;4219:25;;;;;;;;4291:8;4254:18;:30;4273:10;4254:30;;;;;;;;;;;;;;;:34;4285:2;4254:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4341:2;4314:40;;4329:10;4314:40;;;4345:8;4314:40;;;;;;;;;;;;;;;;;;;;;;4148:213;;:::o;915:22:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;525:378:3:-;615:1;600:17;;:3;:17;;;;592:26;;;;;;;;652:4;637:20;;:3;:20;;;;629:29;;;;;;;;779;787:10;799:8;779:7;:29::i;:::-;771:38;;;;;;;;828:19;838:8;828:9;:19::i;:::-;820:28;;;;;;;;859:36;869:10;881:3;886:8;859:9;:36::i;:::-;525:378;;:::o;395:107:9:-;451:4;474:21;487:7;474:8;:12;;:21;;;;:::i;:::-;467:28;;395:107;;;:::o;1054:45:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;3273:436::-;3393:14;3410:10;3393:27;;3457:29;3502:17;;;;;;;;;;;3489:31;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;3489:31:0;;;;3457:63;;3536:6;3545:1;3536:10;;3532:114;3552:17;;;;;;;;;;;3548:21;;:1;:21;3532:114;;;3609:25;:23;:25::i;:::-;3590:13;3604:1;3590:16;;;;;;;;;;;;;;;;;:44;;;;;;;;;;;3571:3;;;;;;;3532:114;;;;3656:45;3669:5;3676:1;3679:6;3687:13;3656:12;:45::i;:::-;3273:436;;;:::o;1123:209:3:-;1218:10;1190:38;;:14;:24;1205:8;1190:24;;;;;;;;;;;;;;;;;;;;;:38;;;1182:47;;;;;;;;1240:14;1257:17;1265:8;1257:7;:17::i;:::-;1240:34;;1285:39;1295:6;1303:10;1315:8;1285:9;:39::i;:::-;1123:209;;:::o;6916:211:57:-;7022:31;7035:4;7041:2;7045:7;7022:12;:31::i;:::-;7071:48;7094:4;7100:2;7104:7;7113:5;7071:22;:48::i;:::-;7063:57;;;;;;;;6916:211;;;;:::o;806:203:5:-;891:8;313:12;:22;326:8;313:22;;;;;;;;;;;;;;;;;;;;;299:36;;:10;:36;;;291:45;;;;;;;;934:12;:22;947:8;934:22;;;;;;;;;;;;;;;;;;;;;920:36;;:10;:36;;;912:45;;;;;;;;993:8;;968:7;976:8;968:17;;;;;;;;;;;;;;;;;;;;:22;;:33;;;;;;;:::i;:::-;;806:203;;;;:::o;1501:151:62:-;1559:13;1592:16;1600:7;1592;:16::i;:::-;1584:25;;;;;;;;1626:10;:19;1637:7;1626:19;;;;;;;;;;;1619:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1501:151;;;:::o;1015:207:5:-;1083:8;313:12;:22;326:8;313:22;;;;;;;;;;;;;;;;;;;;;299:36;;:10;:36;;;291:45;;;;;;;;1126:12;:22;1139:8;1126:22;;;;;;;;;;;;;;;;;;;;;1112:36;;:10;:36;;;1104:45;;;;;;;;1189:7;1197:8;1189:17;;;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;1188:26;1160:7;1168:8;1160:17;;;;;;;;;;;;;;;;;;;;:25;;;:54;;;;;;;;;;;;;;;;;;1015:207;;:::o;4682:145:57:-;4762:4;4785:18;:25;4804:5;4785:25;;;;;;;;;;;;;;;:35;4811:8;4785:35;;;;;;;;;;;;;;;;;;;;;;;;;4778:42;;4682:145;;;;:::o;973:192:2:-;771:5;;;;;;;;;;;757:19;;:10;:19;;;749:28;;;;;;;;1074:1;1054:22;;:8;:22;;;;1046:31;;;;;;;;1121:8;1093:37;;1114:5;;;;;;;;;;;1093:37;;;;;;;;;;;;1149:8;1141:5;;:16;;;;;;;;;;;;;;;;;;973:192;:::o;1231:47:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;7316:152:57:-;7373:4;7389:13;7405:11;:20;7417:7;7405:20;;;;;;;;;;;;;;;;;;;;;7389:36;;7459:1;7442:19;;:5;:19;;;;7435:26;;;7316:152;;;:::o;1429:140:3:-;1504:4;1554:7;1528:33;;:12;:22;1541:8;1528:22;;;;;;;;;;;;;;;;;;;;;:33;;;1521:40;;1429:140;;;;:::o;7831:246:57:-;7916:4;7932:13;7948:16;7956:7;7948;:16::i;:::-;7932:32;;7993:5;7982:16;;:7;:16;;;:51;;;;8026:7;8002:31;;:20;8014:7;8002:11;:20::i;:::-;:31;;;7982:51;:87;;;;8037:32;8054:5;8061:7;8037:16;:32::i;:::-;7982:87;7974:96;;;7831:246;;;;:::o;2958:239:59:-;3043:38;3063:4;3069:2;3073:7;3043:19;:38::i;:::-;3092:47;3125:4;3131:7;3092:32;:47::i;:::-;3150:40;3178:2;3182:7;3150:27;:40::i;:::-;2958:239;;;:::o;3452:196::-;3515:24;3527:2;3531:7;3515:11;:24::i;:::-;3550:40;3578:2;3582:7;3550:27;:40::i;:::-;3601;3633:7;3601:31;:40::i;:::-;3452:196;;:::o;685:119:9:-;741:21;754:7;741:8;:12;;:21;;;;:::i;:::-;789:7;777:20;;;;;;;;;;;;685:119;:::o;810:127::-;869:24;885:7;869:8;:15;;:24;;;;:::i;:::-;922:7;908:22;;;;;;;;;;;;810:127;:::o;3824:288:0:-;3909:15;:20;3925:3;3909:20;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;3967:3;3942:12;:22;3955:8;3942:22;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;4001:1;3984:19;;:5;:19;;;;3981:74;;;4019:15;:22;4035:5;4019:22;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;3981:74;4095:8;4091:3;4070:34;;4085:5;4070:34;;;;;;;;;;;;3824:288;;;:::o;786:162:7:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;2653:492:0:-;2711:6;2777:15;2795:1;2777:19;;2842:11;2920:3;2888;2893:10;2905:9;2871:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2871:44:0;;;2861:55;;;;;;2856:61;;;:67;;;;;;;;2842:81;;2969:2;2959:6;:12;;2955:183;;;2994:1;2987:8;;;;;;2955:183;3034:2;3025:6;:11;:27;;;;;3050:2;3040:6;:12;;3025:27;3022:116;;;3076:1;3069:8;;;;;;3022:116;3125:1;3118:8;;;;2653:492;;:::o;1658:631::-;1784:14;1801:6;1784:23;;1828:19;;:::i;:::-;1850:183;;;;;;;;;1877:5;1850:183;;;;1909:11;1850:183;;;;;;1953:3;1850:183;;;;;;1983:9;1850:183;;;;2016:5;1850:183;;;;;1828:205;;2046:12;2082:1;2061:7;2074:6;2061:20;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2061:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;2046:37;;2094:31;2107:7;2115:9;2094:12;:31::i;:::-;2161:5;2141:26;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2141:26:0;;;;;;;;;;;;;;;;2152:7;2141:26;;;;;;;;;;2178:70;2188:42;2232:6;2240:7;2178:9;:70::i;:::-;2259:22;2265:6;2273:7;2259:5;:22::i;:::-;1658:631;;;;;;;:::o;10744:347:57:-;10865:4;10890:15;:2;:13;;;:15::i;:::-;10889:16;10885:58;;;10928:4;10921:11;;;;10885:58;10953:13;10985:2;10969:36;;;11006:10;11018:4;11024:7;11033:5;10969:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10969:70:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10969:70:57;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10969:70:57;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10969:70:57;;;;;;;;;;;;;;;;10953:86;;658:10;11067:16;;11057:26;;;:6;:26;;;;11049:35;;;10744:347;;;;;;;:::o;9819:402::-;9932:4;9912:24;;:16;9920:7;9912;:16::i;:::-;:24;;;9904:33;;;;;;;;9969:1;9955:16;;:2;:16;;;;9947:25;;;;;;;;9983:23;9998:7;9983:14;:23::i;:::-;10043:30;10071:1;10043:17;:23;10061:4;10043:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;10017:17;:23;10035:4;10017:23;;;;;;;;;;;;;;;:56;;;;10107:28;10133:1;10107:17;:21;10125:2;10107:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;10083:17;:21;10101:2;10083:21;;;;;;;;;;;;;;;:52;;;;10169:2;10146:11;:20;10158:7;10146:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10206:7;10202:2;10187:27;;10196:4;10187:27;;;;;;;;;;;;9819:402;;;:::o;6060:1128:59:-;6322:22;6347:32;6377:1;6347:12;:18;6360:4;6347:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6322:57;;6389:18;6410:17;:26;6428:7;6410:26;;;;;;;;;;;;6389:47;;6554:14;6540:10;:28;;6536:323;;;6584:19;6606:12;:18;6619:4;6606:18;;;;;;;;;;;;;;;6625:14;6606:34;;;;;;;;;;;;;;;;;;6584:56;;6688:11;6655:12;:18;6668:4;6655:18;;;;;;;;;;;;;;;6674:10;6655:30;;;;;;;;;;;;;;;;;:44;;;;6804:10;6771:17;:30;6789:11;6771:30;;;;;;;;;;;:43;;;;6536:323;;6945:12;:18;6958:4;6945:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6060:1128;;;;:::o;4906:183::-;5019:12;:16;5032:2;5019:16;;;;;;;;;;;;;;;:23;;;;4990:17;:26;5008:7;4990:26;;;;;;;;;;;:52;;;;5052:12;:16;5065:2;5052:16;;;;;;;;;;;;;;;5074:7;5052:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5052:30:59;;;;;;;;;;;;;;;;;;;;;;4906:183;;:::o;8320:278:57:-;8405:1;8391:16;;:2;:16;;;;8383:25;;;;;;;;8427:16;8435:7;8427;:16::i;:::-;8426:17;8418:26;;;;;;;;8478:2;8455:11;:20;8467:7;8455:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;8514:28;8540:1;8514:17;:21;8532:2;8514:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;8490:17;:21;8508:2;8490:21;;;;;;;;;;;;;;;:52;;;;8583:7;8579:2;8558:33;;8575:1;8558:33;;;;;;;;;;;;8320:278;;:::o;5284:161:59:-;5387:10;:17;;;;5360:15;:24;5376:7;5360:24;;;;;;;;;;;:44;;;;5414:10;5430:7;5414:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5414:24:59;;;;;;;;;;;;;;;;;;;;;;5284:161;:::o;259:181:7:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;514:184::-;612:1;593:21;;:7;:21;;;;585:30;;;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;2295:245:0:-;2378:20;2401:7;2409:8;2401:17;;;;;;;;;;;;;;;;;;;;2378:40;;2434:7;2444:1;2434:11;;2429:104;2451:9;:16;2447:1;:20;;;2429:104;;;2509:9;2519:1;2509:12;;;;;;;;;;;;;;;;;;;;2488:6;:15;;:18;2504:1;2488:18;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;2469:3;;;;;;;2429:104;;;;2295:245;;;:::o;463:616:71:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o;11252:171:57:-;11351:1;11315:38;;:15;:24;11331:7;11315:24;;;;;;;;;;;;;;;;;;;;;:38;;;;11311:106;;;11404:1;11369:15;:24;11385:7;11369:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11311:106;11252:171;:::o;1205:145:40:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;;;1307:9;1323:1;1319;:5;1307:17;;1342:1;1335:8;;;1205:145;;;;:::o;1431:::-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;58:1670:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"./Ownership.sol\";\r\n\r\n\r\ncontract SeabyBreeding is Ownership {\r\n    //  When two Seabies successfully breed and the pregnancy\r\n    //  timer begins to count. \r\n    event Pregnant(address indexed owner);\r\n    modifier requireOwnerOf(uint _seabyId) {\r\n        require(msg.sender == SeabyToOwner[_seabyId]);\r\n        _;\r\n    }\r\n    // function _isReadyToBreed(Seaby _seaby) internal view returns (bool) {\r\n    //     return true;\r\n    // }\r\n    // function _isReadyToGiveBirth(Seaby _mom) private view returns (bool) {\r\n    //     return true;\r\n    // }\r\n    // function isReadyToBreed(uint _seabyId) public view returns (bool) {\r\n    //     require(_seabyId > 0);\r\n    //     Seaby storage seaby = seabies[_seabyId];\r\n    //     return _isReadyToBreed(seaby);\r\n    // }\r\n    function changeName(uint _seabyId, string calldata _newName) external requireOwnerOf(_seabyId) {\r\n        require(msg.sender == SeabyToOwner[_seabyId]);\r\n        seabies[_seabyId].name = _newName;\r\n    }\r\n    function changeForSaleStatus(uint _seabyId) external requireOwnerOf(_seabyId) {\r\n        require(msg.sender == SeabyToOwner[_seabyId]);\r\n        seabies[_seabyId].forSale = !seabies[_seabyId].forSale;\r\n    }\r\n    function getSeabiesByOwner(address _owner) external view returns(uint[] memory) {\r\n        uint[] memory allSeabies = new uint[](ownerSeabyCount[_owner]);\r\n        uint counter = 0;\r\n        for (uint i = 0; i < seabies.length; i++) {\r\n            if (SeabyToOwner[i] == _owner) {\r\n                allSeabies[counter++] = i;\r\n            }\r\n        }\r\n        return allSeabies;\r\n    }\r\n    // function withdraw() external onlyOwner {\r\n    //     owner.transfer(address(this).balance);\r\n    // }\r\n\r\n}\r\n",
  "sourcePath": "C:/Users/chong/Documents/works/KU_2018_Fall/EECS_581/p1/forks/Seathereum/truffle/contracts/SeabyBreeding.sol",
  "ast": {
    "absolutePath": "/C/Users/chong/Documents/works/KU_2018_Fall/EECS_581/p1/forks/Seathereum/truffle/contracts/SeabyBreeding.sol",
    "exportedSymbols": {
      "SeabyBreeding": [
        832
      ]
    },
    "id": 833,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 699,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/C/Users/chong/Documents/works/KU_2018_Fall/EECS_581/p1/forks/Seathereum/truffle/contracts/Ownership.sol",
        "file": "./Ownership.sol",
        "id": 700,
        "nodeType": "ImportDirective",
        "scope": 833,
        "sourceUnit": 600,
        "src": "27:25:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 701,
              "name": "Ownership",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 599,
              "src": "84:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownership_$599",
                "typeString": "contract Ownership"
              }
            },
            "id": 702,
            "nodeType": "InheritanceSpecifier",
            "src": "84:9:5"
          }
        ],
        "contractDependencies": [
          314,
          427,
          599,
          1155,
          3911,
          4058,
          6710,
          7069,
          7093,
          7244,
          7309,
          7475,
          7502,
          7537
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 832,
        "linearizedBaseContracts": [
          832,
          599,
          314,
          7309,
          1155,
          7093,
          7244,
          7537,
          7069,
          7502,
          6710,
          7475,
          3911,
          4058,
          427
        ],
        "name": "SeabyBreeding",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 706,
            "name": "Pregnant",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 704,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 706,
                  "src": "212:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "212:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "211:23:5"
            },
            "src": "197:38:5"
          },
          {
            "body": {
              "id": 720,
              "nodeType": "Block",
              "src": "280:76:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 711,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7701,
                            "src": "299:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "299:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 713,
                            "name": "SeabyToOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "313:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 715,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 714,
                            "name": "_seabyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 708,
                            "src": "326:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "313:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "299:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 710,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7704,
                        7705
                      ],
                      "referencedDeclaration": 7704,
                      "src": "291:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "291:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 718,
                  "nodeType": "ExpressionStatement",
                  "src": "291:45:5"
                },
                {
                  "id": 719,
                  "nodeType": "PlaceholderStatement",
                  "src": "347:1:5"
                }
              ]
            },
            "documentation": null,
            "id": 721,
            "name": "requireOwnerOf",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 708,
                  "name": "_seabyId",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "265:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 707,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "265:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "264:15:5"
            },
            "src": "241:115:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 747,
              "nodeType": "Block",
              "src": "901:108:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 732,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7701,
                            "src": "920:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "920:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 734,
                            "name": "SeabyToOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "934:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 736,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 735,
                            "name": "_seabyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 723,
                            "src": "947:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "934:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "920:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 731,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7704,
                        7705
                      ],
                      "referencedDeclaration": 7704,
                      "src": "912:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "912:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 739,
                  "nodeType": "ExpressionStatement",
                  "src": "912:45:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 740,
                          "name": "seabies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "968:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Seaby_$47_storage_$dyn_storage",
                            "typeString": "struct AquariumGarden.Seaby storage ref[] storage ref"
                          }
                        },
                        "id": 742,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 741,
                          "name": "_seabyId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 723,
                          "src": "976:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "968:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Seaby_$47_storage",
                          "typeString": "struct AquariumGarden.Seaby storage ref"
                        }
                      },
                      "id": 743,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "968:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 744,
                      "name": "_newName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 725,
                      "src": "993:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "968:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 746,
                  "nodeType": "ExpressionStatement",
                  "src": "968:33:5"
                }
              ]
            },
            "documentation": null,
            "id": 748,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 728,
                    "name": "_seabyId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 723,
                    "src": "891:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 729,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 727,
                  "name": "requireOwnerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 721,
                  "src": "876:14:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "876:24:5"
              }
            ],
            "name": "changeName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 723,
                  "name": "_seabyId",
                  "nodeType": "VariableDeclaration",
                  "scope": 748,
                  "src": "826:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 722,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "826:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 725,
                  "name": "_newName",
                  "nodeType": "VariableDeclaration",
                  "scope": 748,
                  "src": "841:24:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "841:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "825:41:5"
            },
            "returnParameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "901:0:5"
            },
            "scope": 832,
            "src": "806:203:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 776,
              "nodeType": "Block",
              "src": "1093:129:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 757,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7701,
                            "src": "1112:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1112:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 759,
                            "name": "SeabyToOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "1126:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 761,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 760,
                            "name": "_seabyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 750,
                            "src": "1139:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1126:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1112:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 756,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7704,
                        7705
                      ],
                      "referencedDeclaration": 7704,
                      "src": "1104:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1104:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 764,
                  "nodeType": "ExpressionStatement",
                  "src": "1104:45:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 765,
                          "name": "seabies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "1160:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Seaby_$47_storage_$dyn_storage",
                            "typeString": "struct AquariumGarden.Seaby storage ref[] storage ref"
                          }
                        },
                        "id": 767,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 766,
                          "name": "_seabyId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 750,
                          "src": "1168:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1160:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Seaby_$47_storage",
                          "typeString": "struct AquariumGarden.Seaby storage ref"
                        }
                      },
                      "id": 768,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "forSale",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "1160:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "1188:26:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 769,
                            "name": "seabies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "1189:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Seaby_$47_storage_$dyn_storage",
                              "typeString": "struct AquariumGarden.Seaby storage ref[] storage ref"
                            }
                          },
                          "id": 771,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 770,
                            "name": "_seabyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 750,
                            "src": "1197:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1189:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seaby_$47_storage",
                            "typeString": "struct AquariumGarden.Seaby storage ref"
                          }
                        },
                        "id": 772,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "forSale",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42,
                        "src": "1189:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1160:54:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "1160:54:5"
                }
              ]
            },
            "documentation": null,
            "id": 777,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 753,
                    "name": "_seabyId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 750,
                    "src": "1083:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 754,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 752,
                  "name": "requireOwnerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 721,
                  "src": "1068:14:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1068:24:5"
              }
            ],
            "name": "changeForSaleStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 750,
                  "name": "_seabyId",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "1044:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 749,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1044:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1043:15:5"
            },
            "returnParameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1093:0:5"
            },
            "scope": 832,
            "src": "1015:207:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 830,
              "nodeType": "Block",
              "src": "1308:305:5",
              "statements": [
                {
                  "assignments": [
                    788
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 788,
                      "name": "allSeabies",
                      "nodeType": "VariableDeclaration",
                      "scope": 830,
                      "src": "1319:24:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 786,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1319:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 787,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1319:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 796,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 792,
                          "name": "ownerSeabyCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "1357:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 794,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 793,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 779,
                          "src": "1373:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1357:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1346:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 789,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1350:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 790,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1350:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1346:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1319:62:5"
                },
                {
                  "assignments": [
                    798
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 798,
                      "name": "counter",
                      "nodeType": "VariableDeclaration",
                      "scope": 830,
                      "src": "1392:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 797,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1392:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 800,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1407:1:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1392:16:5"
                },
                {
                  "body": {
                    "id": 826,
                    "nodeType": "Block",
                    "src": "1461:117:5",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 812,
                              "name": "SeabyToOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57,
                              "src": "1480:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 814,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 813,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 802,
                              "src": "1493:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1480:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 815,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 779,
                            "src": "1499:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1480:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 825,
                        "nodeType": "IfStatement",
                        "src": "1476:91:5",
                        "trueBody": {
                          "id": 824,
                          "nodeType": "Block",
                          "src": "1507:60:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 822,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 817,
                                    "name": "allSeabies",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 788,
                                    "src": "1526:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 820,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 819,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "1537:9:5",
                                    "subExpression": {
                                      "argumentTypes": null,
                                      "id": 818,
                                      "name": "counter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 798,
                                      "src": "1537:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1526:21:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 821,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 802,
                                  "src": "1550:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1526:25:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 823,
                              "nodeType": "ExpressionStatement",
                              "src": "1526:25:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 805,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 802,
                      "src": "1436:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 806,
                        "name": "seabies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1440:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Seaby_$47_storage_$dyn_storage",
                          "typeString": "struct AquariumGarden.Seaby storage ref[] storage ref"
                        }
                      },
                      "id": 807,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1440:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1436:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 827,
                  "initializationExpression": {
                    "assignments": [
                      802
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 802,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 827,
                        "src": "1424:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 801,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1424:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 804,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1433:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1424:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1456:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 809,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 802,
                        "src": "1456:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 811,
                    "nodeType": "ExpressionStatement",
                    "src": "1456:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "1419:159:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 828,
                    "name": "allSeabies",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 788,
                    "src": "1595:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 784,
                  "id": 829,
                  "nodeType": "Return",
                  "src": "1588:17:5"
                }
              ]
            },
            "documentation": null,
            "id": 831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSeabiesByOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 779,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "1255:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1255:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1254:16:5"
            },
            "returnParameters": {
              "id": 784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 783,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "1293:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 781,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1293:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 782,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1293:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1292:15:5"
            },
            "scope": 832,
            "src": "1228:385:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 833,
        "src": "58:1670:5"
      }
    ],
    "src": "0:1730:5"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/chong/Documents/works/KU_2018_Fall/EECS_581/p1/forks/Seathereum/truffle/contracts/SeabyBreeding.sol",
    "exportedSymbols": {
      "SeabyBreeding": [
        832
      ]
    },
    "id": 833,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 699,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/C/Users/chong/Documents/works/KU_2018_Fall/EECS_581/p1/forks/Seathereum/truffle/contracts/Ownership.sol",
        "file": "./Ownership.sol",
        "id": 700,
        "nodeType": "ImportDirective",
        "scope": 833,
        "sourceUnit": 600,
        "src": "27:25:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 701,
              "name": "Ownership",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 599,
              "src": "84:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownership_$599",
                "typeString": "contract Ownership"
              }
            },
            "id": 702,
            "nodeType": "InheritanceSpecifier",
            "src": "84:9:5"
          }
        ],
        "contractDependencies": [
          314,
          427,
          599,
          1155,
          3911,
          4058,
          6710,
          7069,
          7093,
          7244,
          7309,
          7475,
          7502,
          7537
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 832,
        "linearizedBaseContracts": [
          832,
          599,
          314,
          7309,
          1155,
          7093,
          7244,
          7537,
          7069,
          7502,
          6710,
          7475,
          3911,
          4058,
          427
        ],
        "name": "SeabyBreeding",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 706,
            "name": "Pregnant",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 704,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 706,
                  "src": "212:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "212:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "211:23:5"
            },
            "src": "197:38:5"
          },
          {
            "body": {
              "id": 720,
              "nodeType": "Block",
              "src": "280:76:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 711,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7701,
                            "src": "299:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "299:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 713,
                            "name": "SeabyToOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "313:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 715,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 714,
                            "name": "_seabyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 708,
                            "src": "326:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "313:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "299:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 710,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7704,
                        7705
                      ],
                      "referencedDeclaration": 7704,
                      "src": "291:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "291:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 718,
                  "nodeType": "ExpressionStatement",
                  "src": "291:45:5"
                },
                {
                  "id": 719,
                  "nodeType": "PlaceholderStatement",
                  "src": "347:1:5"
                }
              ]
            },
            "documentation": null,
            "id": 721,
            "name": "requireOwnerOf",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 708,
                  "name": "_seabyId",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "265:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 707,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "265:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "264:15:5"
            },
            "src": "241:115:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 747,
              "nodeType": "Block",
              "src": "901:108:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 732,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7701,
                            "src": "920:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "920:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 734,
                            "name": "SeabyToOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "934:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 736,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 735,
                            "name": "_seabyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 723,
                            "src": "947:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "934:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "920:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 731,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7704,
                        7705
                      ],
                      "referencedDeclaration": 7704,
                      "src": "912:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "912:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 739,
                  "nodeType": "ExpressionStatement",
                  "src": "912:45:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 740,
                          "name": "seabies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "968:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Seaby_$47_storage_$dyn_storage",
                            "typeString": "struct AquariumGarden.Seaby storage ref[] storage ref"
                          }
                        },
                        "id": 742,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 741,
                          "name": "_seabyId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 723,
                          "src": "976:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "968:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Seaby_$47_storage",
                          "typeString": "struct AquariumGarden.Seaby storage ref"
                        }
                      },
                      "id": 743,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "968:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 744,
                      "name": "_newName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 725,
                      "src": "993:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "968:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 746,
                  "nodeType": "ExpressionStatement",
                  "src": "968:33:5"
                }
              ]
            },
            "documentation": null,
            "id": 748,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 728,
                    "name": "_seabyId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 723,
                    "src": "891:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 729,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 727,
                  "name": "requireOwnerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 721,
                  "src": "876:14:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "876:24:5"
              }
            ],
            "name": "changeName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 723,
                  "name": "_seabyId",
                  "nodeType": "VariableDeclaration",
                  "scope": 748,
                  "src": "826:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 722,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "826:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 725,
                  "name": "_newName",
                  "nodeType": "VariableDeclaration",
                  "scope": 748,
                  "src": "841:24:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "841:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "825:41:5"
            },
            "returnParameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "901:0:5"
            },
            "scope": 832,
            "src": "806:203:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 776,
              "nodeType": "Block",
              "src": "1093:129:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 757,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7701,
                            "src": "1112:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1112:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 759,
                            "name": "SeabyToOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "1126:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 761,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 760,
                            "name": "_seabyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 750,
                            "src": "1139:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1126:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1112:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 756,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7704,
                        7705
                      ],
                      "referencedDeclaration": 7704,
                      "src": "1104:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1104:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 764,
                  "nodeType": "ExpressionStatement",
                  "src": "1104:45:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 765,
                          "name": "seabies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "1160:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Seaby_$47_storage_$dyn_storage",
                            "typeString": "struct AquariumGarden.Seaby storage ref[] storage ref"
                          }
                        },
                        "id": 767,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 766,
                          "name": "_seabyId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 750,
                          "src": "1168:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1160:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Seaby_$47_storage",
                          "typeString": "struct AquariumGarden.Seaby storage ref"
                        }
                      },
                      "id": 768,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "forSale",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "1160:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "1188:26:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 769,
                            "name": "seabies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "1189:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Seaby_$47_storage_$dyn_storage",
                              "typeString": "struct AquariumGarden.Seaby storage ref[] storage ref"
                            }
                          },
                          "id": 771,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 770,
                            "name": "_seabyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 750,
                            "src": "1197:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1189:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seaby_$47_storage",
                            "typeString": "struct AquariumGarden.Seaby storage ref"
                          }
                        },
                        "id": 772,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "forSale",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42,
                        "src": "1189:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1160:54:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "1160:54:5"
                }
              ]
            },
            "documentation": null,
            "id": 777,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 753,
                    "name": "_seabyId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 750,
                    "src": "1083:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 754,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 752,
                  "name": "requireOwnerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 721,
                  "src": "1068:14:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1068:24:5"
              }
            ],
            "name": "changeForSaleStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 750,
                  "name": "_seabyId",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "1044:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 749,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1044:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1043:15:5"
            },
            "returnParameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1093:0:5"
            },
            "scope": 832,
            "src": "1015:207:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 830,
              "nodeType": "Block",
              "src": "1308:305:5",
              "statements": [
                {
                  "assignments": [
                    788
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 788,
                      "name": "allSeabies",
                      "nodeType": "VariableDeclaration",
                      "scope": 830,
                      "src": "1319:24:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 786,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1319:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 787,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1319:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 796,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 792,
                          "name": "ownerSeabyCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "1357:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 794,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 793,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 779,
                          "src": "1373:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1357:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1346:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 789,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1350:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 790,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1350:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1346:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1319:62:5"
                },
                {
                  "assignments": [
                    798
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 798,
                      "name": "counter",
                      "nodeType": "VariableDeclaration",
                      "scope": 830,
                      "src": "1392:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 797,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1392:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 800,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1407:1:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1392:16:5"
                },
                {
                  "body": {
                    "id": 826,
                    "nodeType": "Block",
                    "src": "1461:117:5",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 812,
                              "name": "SeabyToOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57,
                              "src": "1480:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 814,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 813,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 802,
                              "src": "1493:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1480:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 815,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 779,
                            "src": "1499:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1480:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 825,
                        "nodeType": "IfStatement",
                        "src": "1476:91:5",
                        "trueBody": {
                          "id": 824,
                          "nodeType": "Block",
                          "src": "1507:60:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 822,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 817,
                                    "name": "allSeabies",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 788,
                                    "src": "1526:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 820,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 819,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "1537:9:5",
                                    "subExpression": {
                                      "argumentTypes": null,
                                      "id": 818,
                                      "name": "counter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 798,
                                      "src": "1537:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1526:21:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 821,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 802,
                                  "src": "1550:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1526:25:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 823,
                              "nodeType": "ExpressionStatement",
                              "src": "1526:25:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 805,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 802,
                      "src": "1436:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 806,
                        "name": "seabies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1440:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Seaby_$47_storage_$dyn_storage",
                          "typeString": "struct AquariumGarden.Seaby storage ref[] storage ref"
                        }
                      },
                      "id": 807,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1440:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1436:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 827,
                  "initializationExpression": {
                    "assignments": [
                      802
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 802,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 827,
                        "src": "1424:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 801,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1424:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 804,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1433:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1424:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1456:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 809,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 802,
                        "src": "1456:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 811,
                    "nodeType": "ExpressionStatement",
                    "src": "1456:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "1419:159:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 828,
                    "name": "allSeabies",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 788,
                    "src": "1595:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 784,
                  "id": 829,
                  "nodeType": "Return",
                  "src": "1588:17:5"
                }
              ]
            },
            "documentation": null,
            "id": 831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSeabiesByOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 779,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "1255:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1255:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1254:16:5"
            },
            "returnParameters": {
              "id": 784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 783,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "1293:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 781,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1293:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 782,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1293:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1292:15:5"
            },
            "scope": 832,
            "src": "1228:385:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 833,
        "src": "58:1670:5"
      }
    ],
    "src": "0:1730:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-03-25T06:00:07.315Z",
  "devdoc": {
    "methods": {
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.     * Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
        "params": {
          "newOwner": "The address to transfer ownership to.\r"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}